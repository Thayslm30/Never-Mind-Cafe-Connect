[
    {
        "id": "1112fc01b007951b",
        "type": "tab",
        "label": "Flow 2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "1e8d2a97271efee3",
        "type": "http in",
        "z": "1112fc01b007951b",
        "name": "",
        "url": "/home",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 290,
        "y": 200,
        "wires": [
            [
                "847e3215873d6187"
            ]
        ]
    },
    {
        "id": "213bdd949126098e",
        "type": "http response",
        "z": "1112fc01b007951b",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 650,
        "y": 200,
        "wires": []
    },
    {
        "id": "847e3215873d6187",
        "type": "template",
        "z": "1112fc01b007951b",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Never Mind Cafe Voice Assistant</title>\n  <style>\n    body {\n      margin: 0;\n      padding: 0;\n      background-image: url('https://daoinsights.com/wp-content/uploads/2024/04/never-cover-scaled.jpg');\n      background-size: cover;\n      background-repeat: no-repeat;\n      background-position: center;\n      background-attachment: fixed;\n      font-family: 'Comic Sans MS', 'Arial Rounded MT Bold', cursive;\n      color: #5D4C79;\n    }\n\n    .content-wrapper {\n      height: 100vh;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      flex-direction: column;\n      background-color: rgba(255, 255, 255, 0.2);\n      padding: 20px;\n    }\n\n    .input-area {\n      background-color: rgba(255, 255, 255, 0.9);\n      border-radius: 20px;\n      padding: 20px 30px;\n      box-shadow: 0 4px 10px rgba(0,0,0,0.1);\n      display: flex;\n      flex-direction: column;\n      gap: 15px;\n      align-items: center;\n    }\n\n    input[type=\"text\"] {\n      width: 300px;\n      padding: 10px;\n      border: 2px solid #FFCEDF;\n      border-radius: 10px;\n      font-size: 16px;\n    }\n\n    button {\n      background-color: #FFCEDF;\n      border: none;\n      border-radius: 10px;\n      padding: 10px 20px;\n      font-size: 16px;\n      color: #5D4C79;\n      cursor: pointer;\n    }\n\n    button:hover {\n      background-color: #FFF6BD;\n    }\n\n    #replyBox {\n      margin-top: 20px;\n      display: flex;\n      flex-wrap: wrap;\n      justify-content: center;\n      gap: 10px;\n    }\n\n    #replyBox button {\n      background: #FFF6BD;\n      border-radius: 10px;\n      padding: 8px 14px;\n      border: none;\n      cursor: pointer;\n    }\n\n    .lang-toggle {\n      position: absolute;\n      top: 10px;\n      right: 20px;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"lang-toggle\">\n    <button onclick=\"toggleLanguage()\">üåê ‰∏≠Êñá / English</button>\n  </div>\n\n  <div class=\"content-wrapper\">\n    <div class=\"input-area\">\n      <input type=\"text\" id=\"textInput\" required />\n      <button id=\"sendBtn\" onclick=\"handleSend()\"></button>\n      <button id=\"speakBtn\" type=\"button\" onclick=\"startRecognition()\"></button>\n\n    </div>\n    <div id=\"replyBox\"></div>\n    <p id=\"confirmationMessage\" style=\"margin-top: 20px; font-size: 16px; color: #ffffff;\"></p>\n  </div>\n\n<script>\n  const urlParams = new URLSearchParams(window.location.search);\n  const lang = urlParams.get(\"lang\") || \"zh\";\n\n  function toggleLanguage() {\n    const newLang = lang === \"zh\" ? \"en\" : \"zh\";\n    urlParams.set(\"lang\", newLang);\n    window.location.search = urlParams.toString();\n  }\n\n  const responsePatterns = [\n    {\n      keywords: [\"coffee\", \"ÂíñÂï°\"],\n      replies: {\n        en: [\"What size would you like?\", \"Hot or iced?\", \"With milk?\", \"Do you want sugar?\"],\n        zh: [\"ËØ∑ÈóÆÊÇ®Ë¶ÅÂ§öÂ§ßÊùØÔºü\", \"ÁÉ≠ÁöÑËøòÊòØÂÜ∞ÁöÑÔºü\", \"Ë¶ÅÂä†ÁâõÂ•∂ÂêóÔºü\", \"ÈúÄË¶ÅÂä†Á≥ñÂêóÔºü\"]\n      }\n    },\n    {\n      keywords: [\"latte\", \"ÊãøÈìÅ\"],\n      replies: {\n        en: [\"Large or small?\", \"Is oat milk okay?\", \"Add syrup?\", \"Single or double shot?\"],\n        zh: [\"ÊÇ®Ë¶ÅÂ§ßÊùØËøòÊòØÂ∞èÊùØÔºü\", \"Âä†ÁáïÈ∫¶Â•∂ÂèØ‰ª•ÂêóÔºü\", \"Âä†Á≥ñÊµÜÂêóÔºü\", \"Âèå‰ªΩÊµìÁº©Ôºü\"]\n      }\n    },\n    {\n      keywords: [\"americano\", \"ÁæéÂºè\"],\n      replies: {\n        en: [\"Hot or iced?\", \"Would you like milk?\", \"Do you want it sweet?\", \"Decaf version?\"],\n        zh: [\"ÂÜ∞ÁöÑËøòÊòØÁÉ≠ÁöÑÔºü\", \"ÈúÄË¶ÅÂä†Â•∂ÂêóÔºü\", \"Ë¶ÅÁîúÂêóÔºü\", \"ÊÉ≥Â∞ùËØï‰ΩéÂõ†ÂêóÔºü\"]\n      }\n    },\n    {\n      keywords: [\"cappuccino\", \"Âç°Â∏ÉÂ•áËØ∫\"],\n      replies: {\n        en: [\"Foamy or less foam?\", \"Do you like it hot?\", \"Sugar?\", \"Double espresso?\"],\n        zh: [\"ÊÇ®ÂñúÊ¨¢Â§öÊ≥°ËøòÊòØÂ∞ëÊ≥°Ôºü\", \"ÁÉ≠ÁöÑÂèØ‰ª•ÂêóÔºü\", \"ÈúÄË¶ÅÂä†Á≥ñÂêóÔºü\", \"Âèå‰ªΩÊµìÁº©Ôºü\"]\n      }\n    },\n    {\n      keywords: [\"small\", \"medium\", \"large\", \"big\", \"Â∞èÊùØ\", \"‰∏≠ÊùØ\", \"Â§ßÊùØ\"],\n      replies: {\n        en: [\"Small it is!\", \"Would you like milk?\", \"Hot or iced?\", \"Sweetened or not?\"],\n        zh: [\"Â•ΩÁöÑÔºåÂ∞èÊùØÔΩû\", \"ÈúÄË¶ÅÂä†ÁâõÂ•∂ÂêóÔºü\", \"ÁÉ≠È•ÆÂèØ‰ª•ÂêóÔºü\", \"ÈúÄË¶ÅÂä†Á≥ñÂêóÔºü\"]\n      }\n    },\n    {\n      keywords: [\"hot\", \"warm\", \"iced\", \"cold\", \"ÁÉ≠\", \"Ê∏©\", \"ÂÜ∞\", \"ÂÜ∑\"],\n      replies: {\n        en: [\"One hot drink coming up!\", \"With sugar?\", \"Add milk?\", \"Would you like it strong?\"],\n        zh: [\"‰∏ÄÊùØÁÉ≠È•ÆÔΩû\", \"Ë¶ÅÂä†Á≥ñÂêóÔºü\", \"Âä†Â•∂ÂêóÔºü\", \"Ë¶Å‰∏çË¶ÅÊµì‰∏ÄÁÇπÁöÑÔºü\"]\n      }\n    },\n    {\n      keywords: [\"yes\", \"yeah\", \"sure\", \"ok\", \"ÊòØÁöÑ\", \"Â•ΩÁöÑ\", \"ÂèØ‰ª•\", \"Ë¶Å\"],\n      replies: {\n        en: [\"Okay!\", \"Anything else?\", \"Got it!\", \"We'll prepare that for you.\"],\n        zh: [\"Â•ΩÁöÑÔΩû\", \"ËøòÊúâÂà´ÁöÑÂêóÔºü\", \"Á®çÁ≠â‰∏Ä‰∏ãÂì¶ÔΩû\", \"È©¨‰∏ä‰∏∫ÊÇ®ÂáÜÂ§áÔΩû\"]\n      }\n    },\n    {\n      keywords: [\"no\", \"nah\", \"not really\", \"‰∏çË¶Å\", \"‰∏çÊòØ\", \"‰∏çÁî®\", \"‰∏çÈúÄË¶Å\"],\n      replies: {\n        en: [\"Understood!\", \"Anything else?\", \"Thank you!\", \"Would you like something else?\"],\n        zh: [\"ÊòéÁôΩÔΩû\", \"ËøòÊúâÂà´ÁöÑÂêóÔºü\", \"Ë∞¢Ë∞¢ÊÇ®ÔΩû\", \"Ë¶ÅÁÇπÂà´ÁöÑÂêóÔºü\"]\n      }\n    },\n    {\n      keywords: [\"how are you\", \"you good\", \"‰ªäÂ§©ÊÄé‰πàÊ†∑\", \"‰Ω†Â•ΩÂêó\", \"ÊúÄËøëÂ•ΩÂêó\"],\n      replies: {\n        en: [\"I'm great, thank you!\", \"Just brewing happiness!\", \"And you?\", \"Lovely to see you!\"],\n        zh: [\"ÊàëÂæàÂ•ΩÔºåË∞¢Ë∞¢ÔΩû\", \"‰ªäÂ§©ÂæàÂºÄÂøÉÔΩû\", \"‰Ω†Âë¢Ôºü\", \"ÈúÄË¶ÅÂíñÂï°ÊèêÁ•ûÂêóÔºü\"]\n      }\n    },\n    {\n      keywords: [\"milk\", \"sugar\", \"ÁâõÂ•∂\", \"Á≥ñ\"],\n      replies: {\n        en: [\"Would you like milk?\", \"Sugar added?\", \"Oat or soy milk?\", \"Sweet or unsweetened?\"],\n        zh: [\"Ë¶ÅÂä†ÁâõÂ•∂ÂêóÔºü\", \"ÈúÄË¶ÅÂä†Á≥ñÂêóÔºü\", \"ÊÉ≥ËØïËØïÁáïÈ∫¶Â•∂ÂêóÔºü\", \"Áîú‰∏ÄÁÇπÂ•ΩÂêóÔºü\"]\n      }\n    },\n    {\n      keywords: [\"decaf\", \"espresso\", \"‰ΩéÂõ†\", \"ÊµìÁº©\"],\n      replies: {\n        en: [\"Decaf or full caffeine?\", \"One espresso shot?\", \"How strong do you want it?\", \"Double shot?\"],\n        zh: [\"‰ΩéÂõ†ËøòÊòØÊôÆÈÄöÁöÑÔºü\", \"‰∏Ä‰ªΩÊµìÁº©ÂèØ‰ª•ÂêóÔºü\", \"ÈúÄË¶ÅÂ§öÊµìÔºü\", \"Ë¶ÅÂèå‰ªΩÊµìÁº©ÂêóÔºü\"]\n      }\n    },\n    {\n      keywords: [\"thanks\", \"Ë∞¢Ë∞¢\"],\n      replies: {\n        en: [\"You're welcome!\", \"Have a great day!\", \"Come again!\", \"Happy to help!\"],\n        zh: [\"‰∏çÂÆ¢Ê∞îÔΩû\", \"Á•ùÊÇ®ÊúâÁæéÂ•ΩÁöÑ‰∏ÄÂ§©ÔºÅ\", \"‰∏ãÊ¨°ËßÅÔºÅ\", \"ÂæàÈ´òÂÖ¥‰∏∫ÊÇ®ÊúçÂä°ÔΩû\"]\n      }\n    },\n    {\n      keywords: [\"hello\", \"hi\", \"‰Ω†Â•Ω\", \"ÊÇ®Â•Ω\"],\n      replies: {\n        en: [\"Hello!\", \"Welcome!\", \"Would you like a drink?\", \"Want a recommendation?\"],\n        zh: [\"‰Ω†Â•ΩÂëÄÔΩû\", \"Ê¨¢ËøéÂÖâ‰∏¥ÔºÅ\", \"ÊÉ≥ÂñùÁÇπ‰ªÄ‰πàÔºü\", \"ÈúÄË¶ÅÊàëÊé®ËçêÂêóÔºü\"]\n      }\n    },\n    {\n      keywords: [\"bye\", \"goodbye\", \"ÂÜçËßÅ\"],\n      replies: {\n        en: [\"See you next time!\", \"Take care!\", \"Bye bye!\", \"Thanks for coming!\"],\n        zh: [\"Ê¨¢Ëøé‰∏ãÊ¨°ÂÜçÊù•ÔΩû\", \"ÂÜçËßÅÂï¶ÔΩû\", \"Á•ùÊÇ®‰∏ÄÂ§©ÊÑâÂø´ÔºÅ\", \"‰øùÈáçÔΩû\"]\n      }\n    }\n  ];\n\n  function showSmartReplies(transcript) {\n    const replyBox = document.getElementById(\"replyBox\");\n    replyBox.innerHTML = \"\";\n\n    const normalized = transcript.trim().toLowerCase();\n    let replies = [];\n\n    for (const pattern of responsePatterns) {\n      for (const keyword of pattern.keywords) {\n        if (normalized.includes(keyword.toLowerCase())) {\n          replies = pattern.replies[lang] || pattern.replies[\"en\"];\n          break;\n        }\n      }\n      if (replies.length > 0) break;\n    }\n\n    if (replies.length === 0) {\n      replies = lang === \"zh\"\n        ? [\"Êä±Ê≠âÔºåÊàë‰∏çÂ§™ÊòéÁôΩÊÇ®ÁöÑÊÑèÊÄùÔΩû\", \"ÂèØ‰ª•ÂÜçËØ¥‰∏ÄÈÅçÂêóÔºü\", \"ÊÇ®ËÉΩÊç¢‰∏™ÊñπÂºèË°®ËææÂêóÔºü\", \"ËØ∑Áî®ÁÆÄÁü≠ÁöÑËØçËØ≠ËØïËØïÔΩû\"]\n        : [\"Sorry, I didn‚Äôt quite understand.\", \"Can you say that again?\", \"Try saying it differently.\", \"Use simpler words, please.\"];\n    }\n\n    replies.forEach(reply => {\n      const btn = document.createElement(\"button\");\n      btn.textContent = reply;\n      btn.onclick = () => alert(\"Barista selected: \" + reply);\n      replyBox.appendChild(btn);\n    });\n  }\n\n  function handleSend() {\n    const text = document.getElementById(\"textInput\").value;\n    if (!text) return;\n\n    const encoded = encodeURIComponent(text);\n    window.location.href = `/response?text=${encoded}&lang=${lang}`;\n\n    const confirmation = document.getElementById(\"confirmationMessage\");\n    confirmation.textContent = lang === \"zh\"\n      ? \"‚òïÔ∏è Â∑≤ÂèëÈÄÅÔºÅÊ≠£Âú®Ë∑≥ËΩ¨ÂõûÂ∫îÈ°µÈù¢...\"\n      : \"‚òïÔ∏è Sent! Redirecting to response page...\";\n\n    setTimeout(() => {\n      confirmation.textContent = \"\";\n    }, 4000);\n  }\n\n  function startRecognition() {\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    if (!SpeechRecognition) {\n      alert(lang === \"zh\" ? \"‰Ω†ÁöÑÊµèËßàÂô®‰∏çÊîØÊåÅËØ≠Èü≥ËØÜÂà´ÔºÅ\" : \"Your browser does not support speech recognition.\");\n      return;\n    }\n\n    const recognition = new SpeechRecognition();\n    recognition.lang = lang === \"zh\" ? \"zh-CN\" : \"en-US\";\n    recognition.interimResults = false;\n    recognition.maxAlternatives = 1;\n\n    recognition.onresult = function(event) {\n      const transcript = event.results[0][0].transcript;\n      document.getElementById(\"textInput\").value = transcript;\n   \n    };\n\n    recognition.onerror = function(event) {\n      console.error(\"Speech recognition error:\", event.error);\n    };\n\n    recognition.start();\n  }\n  window.onload = () => {\n    // Localize UI elements\n    document.getElementById(\"textInput\").placeholder = lang === \"zh\" ? \"ËØ¥ÁÇπ‰ªÄ‰πàÂêß~\" : \"Say something~\";\n    document.getElementById(\"sendBtn\").textContent = lang === \"zh\" ? \"ÂèëÈÄÅ\" : \"Send\";\n    document.getElementById(\"speakBtn\").textContent = lang === \"zh\" ? \"üé§ ÁÇπÊàëËØ¥ËØù\" : \"üé§ Tap to Speak\";\n  };\n</script>\n</body>\n</html>\n",
        "output": "str",
        "x": 480,
        "y": 200,
        "wires": [
            [
                "213bdd949126098e"
            ]
        ]
    },
    {
        "id": "c0e2a8892625fced",
        "type": "http in",
        "z": "1112fc01b007951b",
        "name": "",
        "url": "/submit",
        "method": "post",
        "upload": true,
        "swaggerDoc": "",
        "x": 270,
        "y": 280,
        "wires": [
            [
                "8f524870a58d4b9f"
            ]
        ]
    },
    {
        "id": "8f524870a58d4b9f",
        "type": "http response",
        "z": "1112fc01b007951b",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 470,
        "y": 280,
        "wires": []
    },
    {
        "id": "d4ce286d96eb81fd",
        "type": "http in",
        "z": "1112fc01b007951b",
        "name": "",
        "url": "/response",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 280,
        "y": 340,
        "wires": [
            [
                "c0812e44c78b5e52"
            ]
        ]
    },
    {
        "id": "c0812e44c78b5e52",
        "type": "function",
        "z": "1112fc01b007951b",
        "name": "function 4",
        "func": "const text = msg.req.query.text || \"\";\nconst lang = msg.req.query.lang || \"zh\";\nmsg.headers = { 'Content-Type': 'text/html' };\n\nmsg.payload = `\n<!DOCTYPE html>\n<html lang=\"${lang === \"zh\" ? \"zh-CN\" : \"en\"}\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>${lang === \"zh\" ? \"ÂõûÂ∫îÈÄâÈ°π\" : \"Suggested Replies\"}</title>\n  <style>\n    body {\n      font-family: \"Noto Sans SC\", Arial, sans-serif;\n      margin: 0;\n      padding: 0;\n      background-image: url('https://daoinsights.com/wp-content/uploads/2024/04/never-cover-scaled.jpg');\n      background-size: cover;\n      background-repeat: no-repeat;\n      background-position: center;\n      background-attachment: fixed;\n      color: #333;\n      text-align: center;\n      padding: 40px 20px;\n    }\n\n    .text-header {\n      background-color: rgba(255, 255, 255, 0.85);\n      display: inline-block;\n      padding: 12px 24px;\n      border-radius: 16px;\n      font-size: 24px;\n      font-weight: bold;\n      margin-bottom: 20px;\n      box-shadow: 0 4px 8px rgba(0,0,0,0.2);\n    }\n\n    .user-text {\n      font-size: 22px;\n      background-color: rgba(255, 255, 255, 0.85);\n      display: inline-block;\n      padding: 10px 20px;\n      border-radius: 12px;\n      margin-bottom: 30px;\n      box-shadow: 0 4px 8px rgba(0,0,0,0.1);\n    }\n\n    .reply-btn {\n      display: inline-block;\n      margin: 12px;\n      padding: 16px 32px;\n      background-color: rgba(255, 246, 189, 0.95);\n      border: none;\n      border-radius: 16px;\n      font-size: 20px;\n      font-weight: 500;\n      cursor: pointer;\n      box-shadow: 0 4px 6px rgba(0,0,0,0.15);\n      transition: transform 0.2s ease, background-color 0.2s ease;\n    }\n\n    .reply-btn:hover {\n      background-color: #ffeb80;\n      transform: scale(1.05);\n    }\n\n    #replyBox {\n      margin-top: 20px;\n    }\n\n    .lang-toggle, .home-button {\n      position: absolute;\n      top: 10px;\n    }\n\n    .lang-toggle {\n      right: 20px;\n    }\n\n    .home-button {\n      left: 20px;\n    }\n\n    .lang-toggle button,\n    .home-button button {\n      padding: 8px 16px;\n      border-radius: 10px;\n      background-color: #FFCEDF;\n      border: none;\n      font-size: 16px;\n      cursor: pointer;\n    }\n\n    .lang-toggle button:hover,\n    .home-button button:hover {\n      background-color: #FFF6BD;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"home-button\">\n    <a href=\"/home?lang=${lang}\">\n      <button>‚¨Ö ${lang === \"zh\" ? \"ËøîÂõûÈ¶ñÈ°µ\" : \"Back to Home\"}</button>\n    </a>\n  </div>\n\n  <div class=\"lang-toggle\">\n    <button onclick=\"toggleLanguage()\">üåê ${lang === \"zh\" ? \"English\" : \"‰∏≠Êñá\"}</button>\n  </div>\n\n  <div class=\"text-header\">üßã ${lang === \"zh\" ? \"ÂÆ¢Êà∑ËØ¥Ôºö\" : \"Customer Said:\"}</div><br>\n  <div class=\"user-text\">${text}</div>\n\n  <div class=\"text-header\" style=\"margin-top: 40px;\">‚ú® ${lang === \"zh\" ? \"Âª∫ËÆÆÂõûÂ§çÔºö\" : \"Suggested Replies:\"}</div><br>\n  <div id=\"replyBox\"></div>\n\n  <script>\n    const transcript = ${JSON.stringify(text)};\n    const lang = \"${lang}\";\n\n    function toggleLanguage() {\n      const url = new URL(window.location.href);\n      const newLang = lang === \"zh\" ? \"en\" : \"zh\";\n      url.searchParams.set(\"lang\", newLang);\n      window.location.href = url.toString();\n    }\n\n    const responsePatterns = [\n      {\n        keywords: [\"coffee\", \"ÂíñÂï°\"],\n        replies: {\n          en: [\"What size would you like?\", \"Hot or iced?\", \"With milk?\", \"Do you want sugar?\"],\n          zh: [\"ËØ∑ÈóÆÊÇ®Ë¶ÅÂ§öÂ§ßÊùØÔºü\", \"ÁÉ≠ÁöÑËøòÊòØÂÜ∞ÁöÑÔºü\", \"Ë¶ÅÂä†ÁâõÂ•∂ÂêóÔºü\", \"ÈúÄË¶ÅÂä†Á≥ñÂêóÔºü\"]\n        }\n      },\n      {\n        keywords: [\"latte\", \"ÊãøÈìÅ\"],\n        replies: {\n          en: [\"Large or small?\", \"Is oat milk okay?\", \"Add syrup?\", \"Single or double shot?\"],\n          zh: [\"ÊÇ®Ë¶ÅÂ§ßÊùØËøòÊòØÂ∞èÊùØÔºü\", \"Âä†ÁáïÈ∫¶Â•∂ÂèØ‰ª•ÂêóÔºü\", \"Âä†Á≥ñÊµÜÂêóÔºü\", \"Âèå‰ªΩÊµìÁº©Ôºü\"]\n        }\n      },\n      {\n        keywords: [\"americano\", \"ÁæéÂºè\"],\n        replies: {\n          en: [\"Hot or iced?\", \"Would you like milk?\", \"Do you want it sweet?\", \"Decaf version?\"],\n          zh: [\"ÂÜ∞ÁöÑËøòÊòØÁÉ≠ÁöÑÔºü\", \"ÈúÄË¶ÅÂä†Â•∂ÂêóÔºü\", \"Ë¶ÅÁîúÂêóÔºü\", \"ÊÉ≥Â∞ùËØï‰ΩéÂõ†ÂêóÔºü\"]\n        }\n      },\n      {\n        keywords: [\"cappuccino\", \"Âç°Â∏ÉÂ•áËØ∫\"],\n        replies: {\n          en: [\"Foamy or less foam?\", \"Do you like it hot?\", \"Sugar?\", \"Double espresso?\"],\n          zh: [\"ÊÇ®ÂñúÊ¨¢Â§öÊ≥°ËøòÊòØÂ∞ëÊ≥°Ôºü\", \"ÁÉ≠ÁöÑÂèØ‰ª•ÂêóÔºü\", \"ÈúÄË¶ÅÂä†Á≥ñÂêóÔºü\", \"Âèå‰ªΩÊµìÁº©Ôºü\"]\n        }\n      },\n      {\n        keywords: [\"small\", \"medium\", \"large\", \"big\", \"Â∞èÊùØ\", \"‰∏≠ÊùØ\", \"Â§ßÊùØ\"],\n        replies: {\n          en: [\"Small it is!\", \"Would you like milk?\", \"Hot or iced?\", \"Sweetened or not?\"],\n          zh: [\"Â•ΩÁöÑÔºåÂ∞èÊùØÔΩû\", \"ÈúÄË¶ÅÂä†ÁâõÂ•∂ÂêóÔºü\", \"ÁÉ≠È•ÆÂèØ‰ª•ÂêóÔºü\", \"ÈúÄË¶ÅÂä†Á≥ñÂêóÔºü\"]\n        }\n      },\n      {\n        keywords: [\"hot\", \"warm\", \"iced\", \"cold\", \"ÁÉ≠\", \"Ê∏©\", \"ÂÜ∞\", \"ÂÜ∑\"],\n        replies: {\n          en: [\"One hot drink coming up!\", \"With sugar?\", \"Add milk?\", \"Would you like it strong?\"],\n          zh: [\"‰∏ÄÊùØÁÉ≠È•ÆÔΩû\", \"Ë¶ÅÂä†Á≥ñÂêóÔºü\", \"Âä†Â•∂ÂêóÔºü\", \"Ë¶Å‰∏çË¶ÅÊµì‰∏ÄÁÇπÁöÑÔºü\"]\n        }\n      },\n      {\n        keywords: [\"yes\", \"yeah\", \"sure\", \"ok\", \"ÊòØÁöÑ\", \"Â•ΩÁöÑ\", \"ÂèØ‰ª•\", \"Ë¶Å\"],\n        replies: {\n          en: [\"Okay!\", \"Anything else?\", \"Got it!\", \"We'll prepare that for you.\"],\n          zh: [\"Â•ΩÁöÑÔΩû\", \"ËøòÊúâÂà´ÁöÑÂêóÔºü\", \"Á®çÁ≠â‰∏Ä‰∏ãÂì¶ÔΩû\", \"È©¨‰∏ä‰∏∫ÊÇ®ÂáÜÂ§áÔΩû\"]\n        }\n      },\n      {\n        keywords: [\"no\", \"nah\", \"not really\", \"‰∏çË¶Å\", \"‰∏çÊòØ\", \"‰∏çÁî®\", \"‰∏çÈúÄË¶Å\"],\n        replies: {\n          en: [\"Understood!\", \"Anything else?\", \"Thank you!\", \"Would you like something else?\"],\n          zh: [\"ÊòéÁôΩÔΩû\", \"ËøòÊúâÂà´ÁöÑÂêóÔºü\", \"Ë∞¢Ë∞¢ÊÇ®ÔΩû\", \"Ë¶ÅÁÇπÂà´ÁöÑÂêóÔºü\"]\n        }\n      },\n      {\n        keywords: [\"how are you\", \"you good\", \"‰ªäÂ§©ÊÄé‰πàÊ†∑\", \"‰Ω†Â•ΩÂêó\", \"ÊúÄËøëÂ•ΩÂêó\"],\n        replies: {\n          en: [\"I'm great, thank you!\", \"Just brewing happiness!\", \"And you?\", \"Lovely to see you!\"],\n          zh: [\"ÊàëÂæàÂ•ΩÔºåË∞¢Ë∞¢ÔΩû\", \"‰ªäÂ§©ÂæàÂºÄÂøÉÔΩû\", \"‰Ω†Âë¢Ôºü\", \"ÈúÄË¶ÅÂíñÂï°ÊèêÁ•ûÂêóÔºü\"]\n        }\n      },\n      {\n        keywords: [\"milk\", \"sugar\", \"ÁâõÂ•∂\", \"Á≥ñ\"],\n        replies: {\n          en: [\"Would you like milk?\", \"Sugar added?\", \"Oat or soy milk?\", \"Sweet or unsweetened?\"],\n          zh: [\"Ë¶ÅÂä†ÁâõÂ•∂ÂêóÔºü\", \"ÈúÄË¶ÅÂä†Á≥ñÂêóÔºü\", \"ÊÉ≥ËØïËØïÁáïÈ∫¶Â•∂ÂêóÔºü\", \"Áîú‰∏ÄÁÇπÂ•ΩÂêóÔºü\"]\n        }\n      },\n      {\n        keywords: [\"decaf\", \"espresso\", \"‰ΩéÂõ†\", \"ÊµìÁº©\"],\n        replies: {\n          en: [\"Decaf or full caffeine?\", \"One espresso shot?\", \"How strong do you want it?\", \"Double shot?\"],\n          zh: [\"‰ΩéÂõ†ËøòÊòØÊôÆÈÄöÁöÑÔºü\", \"‰∏Ä‰ªΩÊµìÁº©ÂèØ‰ª•ÂêóÔºü\", \"ÈúÄË¶ÅÂ§öÊµìÔºü\", \"Ë¶ÅÂèå‰ªΩÊµìÁº©ÂêóÔºü\"]\n        }\n      },\n      {\n        keywords: [\"thank\",\"Ë∞¢Ë∞¢\"],\n        replies: {\n          en: [\"You're welcome!\", \"Have a great day!\", \"Come again!\", \"Happy to help!\"],\n          zh: [\"‰∏çÂÆ¢Ê∞îÔΩû\", \"Á•ùÊÇ®ÊúâÁæéÂ•ΩÁöÑ‰∏ÄÂ§©ÔºÅ\", \"‰∏ãÊ¨°ËßÅÔºÅ\", \"ÂæàÈ´òÂÖ¥‰∏∫ÊÇ®ÊúçÂä°ÔΩû\"]\n        }\n      },\n      {\n        keywords: [\"hello\", \"hi\", \"‰Ω†Â•Ω\", \"ÊÇ®Â•Ω\"],\n        replies: {\n          en: [\"Hello!\", \"Welcome!\", \"Would you like a drink?\", \"Want a recommendation?\"],\n          zh: [\"‰Ω†Â•ΩÂëÄÔΩû\", \"Ê¨¢ËøéÂÖâ‰∏¥ÔºÅ\", \"ÊÉ≥ÂñùÁÇπ‰ªÄ‰πàÔºü\", \"ÈúÄË¶ÅÊàëÊé®ËçêÂêóÔºü\"]\n        }\n      },\n      {\n        keywords: [\"bye\", \"goodbye\", \"ÂÜçËßÅ\"],\n        replies: {\n          en: [\"See you next time!\", \"Take care!\", \"Bye bye!\", \"Thanks for coming!\"],\n          zh: [\"Ê¨¢Ëøé‰∏ãÊ¨°ÂÜçÊù•ÔΩû\", \"ÂÜçËßÅÂï¶ÔΩû\", \"Á•ùÊÇ®‰∏ÄÂ§©ÊÑâÂø´ÔºÅ\", \"‰øùÈáçÔΩû\"]\n        }\n      }\n    ];\n\n    function showSmartReplies(transcript) {\n      const replyBox = document.getElementById(\"replyBox\");\n      replyBox.innerHTML = \"\";\n\n      const normalized = transcript.trim().toLowerCase();\n      let replies = [];\n\n      for (const pattern of responsePatterns) {\n        for (const keyword of pattern.keywords) {\n          if (normalized.includes(keyword.toLowerCase())) {\n            replies = pattern.replies[lang] || pattern.replies[\"en\"];\n            break;\n          }\n        }\n        if (replies.length > 0) break;\n      }\n\n      if (replies.length === 0) {\n        replies = lang === \"zh\"\n          ? [\"Êä±Ê≠âÔºåÊàë‰∏çÂ§™ÊòéÁôΩÊÇ®ÁöÑÊÑèÊÄùÔΩû\", \"ÂèØ‰ª•ÂÜçËØ¥‰∏ÄÈÅçÂêóÔºü\", \"ÊÇ®ËÉΩÊç¢‰∏™ÊñπÂºèË°®ËææÂêóÔºü\", \"ËØ∑Áî®ÁÆÄÁü≠ÁöÑËØçËØ≠ËØïËØïÔΩû\"]\n          : [\"Sorry, I didn‚Äôt quite understand.\", \"Can you say that again?\", \"Try saying it differently.\", \"Use simpler words, please.\"];\n      }\n\n      replies.forEach(reply => {\n        const btn = document.createElement(\"button\");\n        btn.className = \"reply-btn\";\n        btn.textContent = reply;\n        btn.onclick = () => {\n          window.location.href = '/reply?reply=' + encodeURIComponent(reply) + '&lang=' + lang;\n        };\n        replyBox.appendChild(btn);\n      });\n    }\n\n    window.onload = () => showSmartReplies(transcript);\n  </script>\n</body>\n</html>\n`;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 340,
        "wires": [
            [
                "1bfb48d1713d965f"
            ]
        ]
    },
    {
        "id": "1bfb48d1713d965f",
        "type": "http response",
        "z": "1112fc01b007951b",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 630,
        "y": 340,
        "wires": []
    },
    {
        "id": "421ac31c618dfeeb",
        "type": "http in",
        "z": "1112fc01b007951b",
        "name": "",
        "url": "/reply",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 260,
        "y": 420,
        "wires": [
            [
                "ebc79c1bcb83d444"
            ]
        ]
    },
    {
        "id": "c16a99b009119036",
        "type": "http response",
        "z": "1112fc01b007951b",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 610,
        "y": 420,
        "wires": []
    },
    {
        "id": "ebc79c1bcb83d444",
        "type": "function",
        "z": "1112fc01b007951b",
        "name": "function 5",
        "func": "const reply = msg.req.query.reply || \"üòä\";\nconst lang = msg.req.query.lang || \"zh\";\nmsg.headers = { 'Content-Type': 'text/html' };\n\nmsg.payload = `\n<html lang=\"${lang === \"zh\" ? \"zh-CN\" : \"en\"}\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>${lang === \"zh\" ? \"ÂÆ¢Êà∑ÂõûÂ∫î\" : \"Customer Reply\"}</title>\n  <style>\n    body {\n      margin: 0;\n      padding: 0;\n      background-image: url('https://daoinsights.com/wp-content/uploads/2024/04/never-cover-scaled.jpg');\n      background-size: cover;\n      background-repeat: no-repeat;\n      background-position: center;\n      background-attachment: fixed;\n      font-family: \"Noto Sans SC\", Arial, sans-serif;\n      text-align: center;\n      color: #333;\n      padding-top: 80px;\n    }\n\n    .reply-display {\n      font-size: 36px;\n      font-weight: bold;\n      background-color: rgba(255, 255, 255, 0.9);\n      display: inline-block;\n      padding: 20px 30px;\n      border-radius: 20px;\n      margin-bottom: 40px;\n      box-shadow: 0 4px 12px rgba(0,0,0,0.2);\n    }\n\n    .input-area {\n      background-color: rgba(255, 255, 255, 0.95);\n      border-radius: 20px;\n      padding: 20px 30px;\n      display: inline-block;\n      box-shadow: 0 4px 10px rgba(0,0,0,0.1);\n    }\n\n    input[type=\"text\"] {\n      width: 300px;\n      padding: 10px;\n      border: 2px solid #FFCEDF;\n      border-radius: 10px;\n      font-size: 16px;\n      margin-bottom: 12px;\n    }\n\n    button {\n      background-color: #FFCEDF;\n      border: none;\n      border-radius: 10px;\n      padding: 10px 20px;\n      font-size: 16px;\n      color: #5D4C79;\n      cursor: pointer;\n      margin: 5px;\n    }\n\n    button:hover {\n      background-color: #FFF6BD;\n    }\n\n    .lang-toggle, .home-button {\n      position: absolute;\n      top: 10px;\n    }\n\n    .lang-toggle {\n      right: 20px;\n    }\n\n    .home-button {\n      left: 20px;\n    }\n\n    .lang-toggle button,\n    .home-button button {\n      padding: 8px 16px;\n      border-radius: 10px;\n      background-color: #FFCEDF;\n      border: none;\n      font-size: 16px;\n      cursor: pointer;\n    }\n\n    .lang-toggle button:hover,\n    .home-button button:hover {\n      background-color: #FFF6BD;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"home-button\">\n    <a href=\"/home?lang=${lang}\">\n      <button>‚¨Ö ${lang === \"zh\" ? \"ËøîÂõûÈ¶ñÈ°µ\" : \"Back to Home\"}</button>\n    </a>\n  </div>\n\n  <div class=\"lang-toggle\">\n    <button onclick=\"toggleLanguage()\">üåê ${lang === \"zh\" ? \"English\" : \"‰∏≠Êñá\"}</button>\n  </div>\n\n  <div class=\"reply-display\">${reply}</div>\n\n  <div class=\"input-area\">\n    <input type=\"text\" id=\"textInput\" placeholder=\"${lang === \"zh\" ? \"ËØ¥ÁÇπ‰ªÄ‰πàÂêß~\" : \"Say something~\"}\" required /><br>\n    <button onclick=\"handleSend()\">${lang === \"zh\" ? \"ÂèëÈÄÅ\" : \"Send\"}</button>\n    <button type=\"button\" onclick=\"startRecognition()\">\n      üé§ ${lang === \"zh\" ? \"ÁÇπÊàëËØ¥ËØù\" : \"Tap to Speak\"}\n    </button>\n  </div>\n\n  <script>\n    const lang = \"${lang}\";\n\n    function toggleLanguage() {\n      const url = new URL(window.location.href);\n      const newLang = lang === \"zh\" ? \"en\" : \"zh\";\n      url.searchParams.set(\"lang\", newLang);\n      window.location.href = url.toString();\n    }\n\n    function handleSend() {\n      const text = document.getElementById(\"textInput\").value;\n      if (!text) return;\n      const encoded = encodeURIComponent(text);\n      window.location.href = '/response?text=' + encoded + '&lang=' + lang;\n    }\n\n    function startRecognition() {\n      const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n      if (!SpeechRecognition) {\n        alert(lang === \"zh\" ? \"‰Ω†ÁöÑÊµèËßàÂô®‰∏çÊîØÊåÅËØ≠Èü≥ËØÜÂà´ÔºÅ\" : \"Your browser does not support speech recognition.\");\n        return;\n      }\n\n      const recognition = new SpeechRecognition();\n      recognition.lang = lang === \"zh\" ? \"zh-CN\" : \"en-US\";\n      recognition.interimResults = false;\n      recognition.maxAlternatives = 1;\n\n      recognition.onresult = function(event) {\n        const transcript = event.results[0][0].transcript;\n        document.getElementById(\"textInput\").value = transcript;\n      };\n\n      recognition.onerror = function(event) {\n        console.error(\"Speech recognition error:\", event.error);\n      };\n\n      recognition.start();\n    }\n  </script>\n</body>\n</html>\n`;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 420,
        "wires": [
            [
                "c16a99b009119036"
            ]
        ]
    }
]