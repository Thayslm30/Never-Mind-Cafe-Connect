[
    {
        "id": "68bd05f44063bb73",
        "type": "tab",
        "label": "tutorial",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "7d4c73d3e09426bd",
        "type": "http in",
        "z": "68bd05f44063bb73",
        "name": "",
        "url": "/home",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 230,
        "y": 280,
        "wires": [
            [
                "015ab0c711e307cb"
            ]
        ]
    },
    {
        "id": "61e276489461e405",
        "type": "http response",
        "z": "68bd05f44063bb73",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 590,
        "y": 280,
        "wires": []
    },
    {
        "id": "015ab0c711e307cb",
        "type": "template",
        "z": "68bd05f44063bb73",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Never Mind Cafe Voice Assistant</title>\n  <style>\n    body {\n      margin: 0;\n      padding: 0;\n      background-image: url('https://daoinsights.com/wp-content/uploads/2024/04/never-cover-scaled.jpg');\n      background-size: cover;\n      background-repeat: no-repeat;\n      background-position: center;\n      background-attachment: fixed;\n      font-family: 'Comic Sans MS', 'Arial Rounded MT Bold', cursive;\n      color: #5D4C79;\n    }\n\n    .content-wrapper {\n      height: 100vh;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      flex-direction: column;\n      background-color: rgba(255, 255, 255, 0.2);\n      padding: 20px;\n    }\n\n    .input-area {\n      background-color: rgba(255, 255, 255, 0.9);\n      border-radius: 20px;\n      padding: 20px 30px;\n      box-shadow: 0 4px 10px rgba(0,0,0,0.1);\n      display: flex;\n      flex-direction: column;\n      gap: 15px;\n      align-items: center;\n    }\n\n    input[type=\"text\"] {\n      width: 300px;\n      padding: 10px;\n      border: 2px solid #FFCEDF;\n      border-radius: 10px;\n      font-size: 16px;\n    }\n\n    button {\n      background-color: #FFCEDF;\n      border: none;\n      border-radius: 10px;\n      padding: 10px 20px;\n      font-size: 16px;\n      color: #5D4C79;\n      cursor: pointer;\n    }\n\n    button:hover {\n      background-color: #FFF6BD;\n    }\n\n    #replyBox {\n      margin-top: 20px;\n      display: flex;\n      flex-wrap: wrap;\n      justify-content: center;\n      gap: 10px;\n    }\n\n    #replyBox button {\n      background: #FFF6BD;\n      border-radius: 10px;\n      padding: 8px 14px;\n      border: none;\n      cursor: pointer;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"content-wrapper\">\n    <div class=\"input-area\">\n      <input type=\"text\" id=\"textInput\" placeholder=\"说点什么吧~\" required />\n      <button onclick=\"handleSend()\">发送</button>\n      <button type=\"button\" onclick=\"startRecognition()\">🎤 点我说话</button>\n    </div>\n    <div id=\"replyBox\"></div>\n    <p id=\"confirmationMessage\" style=\"margin-top: 20px; font-size: 16px; color: #ffffff;\"></p>\n  </div>\n\n  <script>\n    function showSmartReplies(transcript) {\n      const replyBox = document.getElementById(\"replyBox\");\n      replyBox.innerHTML = \"\";\n      const lower = transcript.toLowerCase();\n      let replies = [];\n\n      if (lower.includes(\"coffee\") || lower.includes(\"咖啡\")) {\n        replies = [\"您要多大杯？\", \"热的还是冰的？\", \"要加牛奶吗？\", \"需要加糖吗？\"];\n      } else if (lower.includes(\"latte\") || lower.includes(\"拿铁\") || lower.includes(\"卡布奇诺\")) {\n        replies = [\"要大杯还是小杯？\", \"可以接受燕麦奶吗？\", \"需要加口味糖浆吗？\", \"要一份还是双份浓缩？\"];\n      } else if (lower.includes(\"how are you\") || lower.includes(\"你好吗\") || lower.includes(\"今天怎么样\")) {\n        replies = [\"我很好，谢谢！\", \"今天挺忙的～\", \"心情不错哦～\", \"你呢？\"];\n      } else if (lower.includes(\"hello\") || lower.includes(\"hi\") || lower.includes(\"你好\")) {\n        replies = [\"你好呀！\", \"欢迎光临～\", \"请问想喝点什么？\", \"今天想喝点特别的吗？\"];\n      } else if (lower.includes(\"thanks\") || lower.includes(\"谢谢\")) {\n        replies = [\"不客气～\", \"很高兴为您服务！\", \"祝您有美好的一天！\", \"下次见～\"];\n      }\n\n      replies.forEach(reply => {\n        const btn = document.createElement(\"button\");\n        btn.textContent = reply;\n        btn.onclick = () => alert(\"Barista selected: \" + reply);\n        replyBox.appendChild(btn);\n      });\n    }\n\n    function handleSend() {\n      const text = document.getElementById(\"textInput\").value;\n      if (!text) return;\n\n      const encoded = encodeURIComponent(text);\n      window.open(`/response?text=${encoded}`, \"_blank\");\n\n      const confirmation = document.getElementById(\"confirmationMessage\");\n      confirmation.textContent = \"☕️ 已发送！已打开回应页面。\";\n\n      setTimeout(() => {\n        confirmation.textContent = \"\";\n      }, 4000);\n    }\n\n    function startRecognition() {\n      const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n      if (!SpeechRecognition) {\n        alert(\"你的浏览器不支持语音识别！\");\n        return;\n      }\n\n      const recognition = new SpeechRecognition();\n      recognition.lang = \"zh-CN\";\n      recognition.interimResults = false;\n      recognition.maxAlternatives = 1;\n\n      recognition.onresult = function(event) {\n        const transcript = event.results[0][0].transcript;\n        document.getElementById(\"textInput\").value = transcript;\n        showSmartReplies(transcript);\n      };\n\n      recognition.onerror = function(event) {\n        console.error(\"Speech recognition error:\", event.error);\n      };\n\n      recognition.start();\n    }\n  </script>\n</body>\n</html>\n\n",
        "output": "str",
        "x": 420,
        "y": 280,
        "wires": [
            [
                "61e276489461e405"
            ]
        ]
    },
    {
        "id": "b6b11255307a10a8",
        "type": "http in",
        "z": "68bd05f44063bb73",
        "name": "",
        "url": "/submit",
        "method": "post",
        "upload": true,
        "swaggerDoc": "",
        "x": 210,
        "y": 360,
        "wires": [
            [
                "cc771fd0a6fc1ae7"
            ]
        ]
    },
    {
        "id": "cc771fd0a6fc1ae7",
        "type": "http response",
        "z": "68bd05f44063bb73",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 410,
        "y": 360,
        "wires": []
    },
    {
        "id": "efce3640b5c54f12",
        "type": "http in",
        "z": "68bd05f44063bb73",
        "name": "",
        "url": "/response",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 220,
        "y": 420,
        "wires": [
            [
                "af932e98baef49e1"
            ]
        ]
    },
    {
        "id": "af932e98baef49e1",
        "type": "function",
        "z": "68bd05f44063bb73",
        "name": "function 2",
        "func": "\nconst text = msg.req.query.text?.toLowerCase() || \"\";\nlet replies = [];\n\nif (text.includes(\"coffee\") || text.includes(\"咖啡\")) {\n    replies = [\"您要多大杯？\", \"热的还是冰的？\", \"要加牛奶吗？\", \"需要加糖吗？\"];\n} else if (text.includes(\"latte\") || text.includes(\"拿铁\") || text.includes(\"卡布奇诺\")) {\n    replies = [\"要大杯还是小杯？\", \"可以接受燕麦奶吗？\", \"需要加口味糖浆吗？\", \"要一份还是双份浓缩？\"];\n} else if (text.includes(\"how are you\") || text.includes(\"你好吗\") || text.includes(\"今天怎么样\")) {\n    replies = [\"我很好，谢谢！\", \"今天挺忙的～\", \"心情不错哦～\", \"你呢？\"];\n} else if (text.includes(\"你好\") || text.includes(\"您好\") || text.includes(\"你好\")) {\n    replies = [\"你好呀！\", \"欢迎光临～\", \"请问想喝点什么？\", \"今天想喝点特别的吗？\"];\n} else if (text.includes(\"thanks\") || text.includes(\"谢谢\")) {\n    replies = [\"不客气～\", \"很高兴为您服务！\", \"祝您有美好的一天！\", \"下次见～\"];\n} else {\n  replies = [\n    \"这是一个特别的点单吗？😊\", \"可以再说一点细节吗？\", \"我们来一起确认一下～\",\"这听起来很有趣！可以多告诉我一点吗？\"\n  ];\n}\n\n\nmsg.headers = { 'Content-Type': 'text/html' };\n\nmsg.payload = `\n  <html>\n  <head>\n    <title>回应选项</title>\n    <style>\n      body {\n        font-family: \"Noto Sans SC\", Arial, sans-serif;\n        margin: 0;\n        padding: 0;\n        background-image: url('https://daoinsights.com/wp-content/uploads/2024/04/never-cover-scaled.jpg');\n        background-size: cover;\n        background-repeat: no-repeat;\n        background-position: center;\n        background-attachment: fixed;\n        color: #333;\n        text-align: center;\n        padding: 40px 20px;\n      }\n\n      .text-header {\n        background-color: rgba(255, 255, 255, 0.85);\n        display: inline-block;\n        padding: 12px 24px;\n        border-radius: 16px;\n        font-size: 24px;\n        font-weight: bold;\n        margin-bottom: 20px;\n        box-shadow: 0 4px 8px rgba(0,0,0,0.2);\n      }\n\n      .user-text {\n        font-size: 22px;\n        background-color: rgba(255, 255, 255, 0.85);\n        display: inline-block;\n        padding: 10px 20px;\n        border-radius: 12px;\n        margin-bottom: 30px;\n        box-shadow: 0 4px 8px rgba(0,0,0,0.1);\n      }\n\n      .reply-btn {\n        display: inline-block;\n        margin: 12px;\n        padding: 16px 32px;\n        background-color: rgba(255, 246, 189, 0.95);\n        border: none;\n        border-radius: 16px;\n        font-size: 20px;\n        font-weight: 500;\n        cursor: pointer;\n        box-shadow: 0 4px 6px rgba(0,0,0,0.15);\n        transition: transform 0.2s ease, background-color 0.2s ease;\n      }\n\n      .reply-btn:hover {\n        background-color: #ffeb80;\n        transform: scale(1.05);\n      }\n    </style>\n  </head>\n  <body>\n    <div class=\"text-header\">🧋 客户说：</div><br>\n    <div class=\"user-text\">${msg.req.query.text}</div>\n\n    <div class=\"text-header\" style=\"margin-top: 40px;\">✨ 建议回复：</div><br>\n   \n    ${replies.map(r => `<button class=\"reply-btn\" onclick=\"window.location='/reply?reply=${encodeURIComponent(r)}'\">${r}</button>`).join(\"\")}\n\n  </body>\n  </html>\n`;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 420,
        "wires": [
            [
                "c77c11ea936aefcb"
            ]
        ]
    },
    {
        "id": "c77c11ea936aefcb",
        "type": "http response",
        "z": "68bd05f44063bb73",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 570,
        "y": 420,
        "wires": []
    },
    {
        "id": "23e8d6b0ecc7741b",
        "type": "http in",
        "z": "68bd05f44063bb73",
        "name": "",
        "url": "/reply",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 200,
        "y": 500,
        "wires": [
            [
                "9912479047f3f968"
            ]
        ]
    },
    {
        "id": "e9c4f27f434cf8bc",
        "type": "http response",
        "z": "68bd05f44063bb73",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 550,
        "y": 500,
        "wires": []
    },
    {
        "id": "9912479047f3f968",
        "type": "function",
        "z": "68bd05f44063bb73",
        "name": "function 3",
        "func": "const reply = msg.req.query.reply || \"😊\";\nmsg.headers = { 'Content-Type': 'text/html' };\n\nmsg.payload = `\n<html lang=\"zh-CN\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>客户回应</title>\n  <style>\n    body {\n      margin: 0;\n      padding: 0;\n      background-image: url('https://daoinsights.com/wp-content/uploads/2024/04/never-cover-scaled.jpg');\n      background-size: cover;\n      background-repeat: no-repeat;\n      background-position: center;\n      background-attachment: fixed;\n      font-family: \"Noto Sans SC\", Arial, sans-serif;\n      text-align: center;\n      color: #333;\n      padding-top: 80px;\n    }\n\n    .reply-display {\n      font-size: 36px;\n      font-weight: bold;\n      background-color: rgba(255, 255, 255, 0.9);\n      display: inline-block;\n      padding: 20px 30px;\n      border-radius: 20px;\n      margin-bottom: 40px;\n      box-shadow: 0 4px 12px rgba(0,0,0,0.2);\n    }\n\n    .input-area {\n      background-color: rgba(255, 255, 255, 0.95);\n      border-radius: 20px;\n      padding: 20px 30px;\n      display: inline-block;\n      box-shadow: 0 4px 10px rgba(0,0,0,0.1);\n    }\n\n    input[type=\"text\"] {\n      width: 300px;\n      padding: 10px;\n      border: 2px solid #FFCEDF;\n      border-radius: 10px;\n      font-size: 16px;\n      margin-bottom: 12px;\n    }\n\n    button {\n      background-color: #FFCEDF;\n      border: none;\n      border-radius: 10px;\n      padding: 10px 20px;\n      font-size: 16px;\n      color: #5D4C79;\n      cursor: pointer;\n      margin: 5px;\n    }\n\n    button:hover {\n      background-color: #FFF6BD;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"reply-display\">${reply}</div>\n  <div class=\"input-area\">\n    <input type=\"text\" id=\"textInput\" placeholder=\"说点什么吧~\" required /><br>\n    <button onclick=\"handleSend()\">发送</button>\n    <button type=\"button\" onclick=\"startRecognition()\">🎤 点我说话</button>\n  </div>\n\n  <script>\n    function handleSend() {\n      const text = document.getElementById(\"textInput\").value;\n      if (!text) return;\n\n      const encoded = encodeURIComponent(text);\n      window.open('/response?text=' + encoded, '_blank');\n    }\n\n    function startRecognition() {\n      const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n      if (!SpeechRecognition) {\n        alert(\"你的浏览器不支持语音识别！\");\n        return;\n      }\n\n      const recognition = new SpeechRecognition();\n      recognition.lang = \"zh-CN\";\n      recognition.interimResults = false;\n      recognition.maxAlternatives = 1;\n\n      recognition.onresult = function(event) {\n        const transcript = event.results[0][0].transcript;\n        document.getElementById(\"textInput\").value = transcript;\n      };\n\n      recognition.onerror = function(event) {\n        console.error(\"Speech recognition error:\", event.error);\n      };\n\n      recognition.start();\n    }\n  </script>\n</body>\n</html>\n`;\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 500,
        "wires": [
            [
                "e9c4f27f434cf8bc"
            ]
        ]
    }
]